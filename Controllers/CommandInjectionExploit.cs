using System.Diagnostics;
using System.Text.RegularExpressions;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Hosting;

namespace WebApplication1.Controllers;

public partial class CommandInjectionExploit : Controller
{
    [GeneratedRegex(@"^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$")]
    private static partial Regex MyRegex();

    public IActionResult Index(bool isCorrect)
    {
        return View(isCorrect ? "Correct" : "Incorrect");
    }

    [HttpPost]
    public IActionResult Ping(string input, bool safe = false)
    {
        ViewData["Message"] = $"You entered: {input}";
        try
        {
            var escapedInput = $"\"{input}\"";
            var scriptPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "bash.sh");
            if (!System.IO.File.Exists(scriptPath))
                return Content($"Cannot find script at {scriptPath}");

            if (safe && !MyRegex().IsMatch(input))
                return Content("Error: You entered: " + input);

            var process = new Process
            {
                StartInfo = new ProcessStartInfo
                {
                    FileName = @"C:\Program Files\Git\bin\bash.exe",
                    Arguments = $"{scriptPath} {escapedInput}",
                    RedirectStandardOutput = true,
                    UseShellExecute = false,
                    CreateNoWindow = true
                }
            };
            process.Start();
            var result = process.StandardOutput.ReadToEnd();
            process.WaitForExit();

            return Content(result);
        }
        catch (Exception ex)
        {
            return Content($"Error: {ex.Message}");
        }
    }
}